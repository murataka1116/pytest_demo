# Generated by Selenium IDE 
from flask.scaffold import setupmethod
import pytest
import time
import json
import chromedriver_binary
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestPytestsiteopen():
  def setup_method(self, method):
    # self.driver = webdriver.Remote(command_executor='http://localhost:9004', desired_capabilities=DesiredCapabilities.CHROME)
    self.driver = webdriver.Chrome()

    # self.driver.get("https://www.google.com/")
    # self.driver = webdriver.Chrome(executable_path="https://www.ntt.com/index.html")
    #self.vars = {}
    # self.driver.quit()
  
  # def teardown_method(self, method):
  #   self.driver.quit()
  
  def test_pytestsiteopen(self):
    #setup_method()
    
    # Test name: pytest-site-open
    # Step # | name | target | value
    # 1 | open | /index.html | 
    self.driver.get("https://www.ntt.com/index.html")
    # 2 | setWindowSize | 1936x1056 | 
    #self.driver.set_window_size(1936, 1056)
    # 3 | mouseOver | css=.swiper-slide-active .pc | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".swiper-slide-active .pc")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 4 | mouseOut | css=.swiper-slide-active .pc | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    #actions.move_to_element(element, 0, 0).perform()
    # 5 | click | css=.global-nav__tab:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".global-nav__tab:nth-child(1)").click()
    # 6 | click | css=.global-drop-menu-tile--active .global-drop-menu-tile__title:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".global-drop-menu-tile--active .global-drop-menu-tile__title:nth-child(1)").click()
    # 7 | assertText | css=.global-drop--active .global-drop-menu-tile--active > .global-drop-menu-tile__link | Smart World・DXソリューション
    assert self.driver.find_element(By.CSS_SELECTOR, ".global-drop--active .global-drop-menu-tile--active > .global-drop-menu-tile__link").text == "Smart World・DXソリューション"